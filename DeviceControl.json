{
  "entityResolver": {
    "searchConfiguration": {
      "maxEdits": 0
    },
    "type": "internal",
    "isGenerated": true
  },
  "minIntentConfidence": 0.4,
  "highIntentConfidence": 0.8,
  "lgTemplates": [
    "# FallbackResponse",
    "- I'm sorry, I haven't understand what you mean",
    "- I don't catch that",
    "# TurnOnOffCommand-SubjectDevice",
    "- Which device do you want to control",
    "- Which device would you like to turn {OnOff}",
    "# TurnOnOffCommand-OnOff",
    "- Do you want to turn on or off",
    "- Do you want to turn on or off",
    "# TurnOnOffCommand-29274d80015d11eb8d762da3813cab97",
    "- OK, turn the {SubjectDevice} {OnOff}",
    "- So, I'm turning {OnOff} the {SubjectDevice}",
    "# SetColorCommand-Color",
    "- which color do you want to enable",
    "- tell me the color to enable",
    "# SetColorCommand-SetLedColoronSuccess-f5a3a2000d3d11ebb45e7754f0bdba78",
    "- I'm setting the led to {Color}",
    "- I'm enabling the {Color} color",
    "# SetColorCommand-SetLedColoronFailure-f5a3a2000d3d11ebb45e7754f0bdba78",
    "- I'm sorry, I can't enable the {Color} color",
    "- There was an unexpected error while trying to turn the led {Color}"
  ],
  "lgTemplatesMap": {
    "# FallbackResponse": [
      "- I'm sorry, I haven't understand what you mean",
      "- I don't catch that"
    ],
    "# TurnOnOffCommand-SubjectDevice": [
      "- Which device do you want to control",
      "- Which device would you like to turn {OnOff}"
    ],
    "# TurnOnOffCommand-OnOff": [
      "- Do you want to turn on or off",
      "- Do you want to turn on or off"
    ],
    "# TurnOnOffCommand-29274d80015d11eb8d762da3813cab97": [
      "- OK, turn the {SubjectDevice} {OnOff}",
      "- So, I'm turning {OnOff} the {SubjectDevice}"
    ],
    "# SetColorCommand-Color": [
      "- which color do you want to enable",
      "- tell me the color to enable"
    ],
    "# SetColorCommand-SetLedColoronSuccess-f5a3a2000d3d11ebb45e7754f0bdba78": [
      "- I'm setting the led to {Color}",
      "- I'm enabling the {Color} color"
    ],
    "# SetColorCommand-SetLedColoronFailure-f5a3a2000d3d11ebb45e7754f0bdba78": [
      "- I'm sorry, I can't enable the {Color} color",
      "- There was an unexpected error while trying to turn the led {Color}"
    ]
  },
  "type": "BaseLanguage",
  "recognizer": {
    "application": "",
    "isStaging": false,
    "versionId": "0.1",
    "type": "luis"
  },
  "speechOutput": {
    "font": "Microsoft Server Speech Text to Speech Voice (en-US, AriaNeural)",
    "locale": "en-US"
  },
  "registeredKeywords": [
    "computer",
    "hey computer"
  ],
  "webEndpoints": [
    {
      "name": "SetLedColor",
      "method": "POST",
      "url": "https://2ef530125150.ngrok.io/api/led",
      "headers": {
        "x-api-key": "kMDsOy0oYAmNnLPhkLUsNY3duldXYX2uF0AX7o37opfcxyU8f2M1vP3jjElR4W9jM3quK2dUQQ6xV3a6L8Hok6tKChYwSkWwbsLyzn3vhdnxvd6DsRZVAOcPHPLLqC1L5an4ryAWp1MeZUhfmJ64mxVNQwtanx8xCIlDR3hmxBwvVgpThfKlVZ0kUlpiVYRnzkeBFA23NVAoffLbrKIaMYpmhJgJHhpKBZ1ZI2dOrBh6wAIcrHaMb4xRjaNU8Wrq"
      },
      "parameters": {},
      "sendFrame": false,
      "updateFrame": false,
      "remoteUpdate": false
    }
  ],
  "globalParameters": [],
  "commands": [
    {
      "name": "FallbackCommand",
      "completionStrategy": "OnRequiredParameters",
      "parameters": [],
      "rules": [],
      "completionRules": [
        {
          "name": "DefaultResponse",
          "conditions": [
            {
              "type": "True"
            }
          ],
          "actions": [
            {
              "type": "SpeechResponse",
              "response": {
                "type": "Template",
                "templateName": "# FallbackResponse"
              }
            }
          ],
          "postExecutionState": "None"
        }
      ],
      "triggeringExamples": [
        "> - You can start sentences with '>' to add comments.",
        "> - You can also use parameters by adding the name of the parameter within curly braces, i.e.",
        ">     Set an alarm to {YourDateParameterName}",
        ">   Where YourDateParameterName is the name of a parameter defined in the 'Parameters' section.",
        "Help",
        "Help me",
        "What can you do?",
        "How can I start?",
        "Hello",
        "Hi"
      ],
      "multiTurnExamples": []
    },
    {
      "name": "TurnOnOffCommand",
      "completionStrategy": "OnRequiredParameters",
      "parameters": [
        {
          "name": "SubjectDevice",
          "type": {
            "name": "String",
            "configuration": {
              "type": "StringList",
              "values": {
                "television": [
                  "tv"
                ],
                "air conditioning": [
                  "air",
                  "conditioner",
                  "air conditioner"
                ],
                "light": []
              }
            }
          },
          "elicitResponse": {
            "type": "Template",
            "templateName": "# TurnOnOffCommand-SubjectDevice"
          }
        },
        {
          "name": "OnOff",
          "type": {
            "name": "String",
            "configuration": {
              "type": "StringList",
              "values": {
                "on": [],
                "off": []
              }
            }
          },
          "elicitResponse": {
            "type": "Template",
            "templateName": "# TurnOnOffCommand-OnOff"
          }
        }
      ],
      "rules": [],
      "completionRules": [
        {
          "name": "Done",
          "conditions": [
            {
              "type": "True"
            },
            {
              "type": "AllRequiredParameters"
            }
          ],
          "actions": [
            {
              "type": "SpeechResponse",
              "response": {
                "type": "Template",
                "templateName": "# TurnOnOffCommand-29274d80015d11eb8d762da3813cab97"
              }
            },
            {
              "type": "SendActivity",
              "activity": {
                "type": "event",
                "name": "turnOnOffCommand",
                "value": {
                  "device": "{SubjectDevice}",
                  "onOff": "{OnOff}"
                }
              }
            }
          ],
          "nextTurnExpectations": [],
          "postExecutionState": "CompleteCommand"
        }
      ],
      "triggeringExamples": [
        "turn it {OnOff}",
        "turn the {SubjectDevice} {OnOff}",
        "turn {OnOff} the {SubjectDevice}",
        "switch it {OnOff}",
        "switch the {SubjectDevice} {OnOff}",
        "switch {OnOff} the {SubjectDevice}"
      ]
    },
    {
      "name": "SetColorCommand",
      "completionStrategy": "OnRequiredParameters",
      "parameters": [
        {
          "name": "Color",
          "type": {
            "name": "String",
            "configuration": {
              "type": "StringList",
              "values": {
                "red": [],
                "green": [],
                "blue": [],
                "black": [
                  "blank"
                ]
              }
            }
          },
          "elicitResponse": {
            "type": "Template",
            "templateName": "# SetColorCommand-Color"
          }
        }
      ],
      "rules": [],
      "completionRules": [
        {
          "name": "Done",
          "conditions": [
            {
              "type": "True"
            },
            {
              "type": "AllRequiredParameters"
            }
          ],
          "actions": [
            {
              "type": "CallHttpEndpoint",
              "name": "SetLedColor",
              "content": {
                "color": "{Color}"
              },
              "parameters": "",
              "onSuccess": {
                "type": "SpeechResponse",
                "response": {
                  "type": "Template",
                  "templateName": "# SetColorCommand-SetLedColoronSuccess-f5a3a2000d3d11ebb45e7754f0bdba78"
                }
              },
              "onFailure": {
                "type": "SpeechResponse",
                "response": {
                  "type": "Template",
                  "templateName": "# SetColorCommand-SetLedColoronFailure-f5a3a2000d3d11ebb45e7754f0bdba78"
                }
              }
            }
          ],
          "nextTurnExpectations": [],
          "postExecutionState": "CompleteCommand"
        }
      ],
      "triggeringExamples": [
        "set the color to {Color}",
        "set the {Color} color",
        "set {Color}",
        "enable the {Color} color",
        "enable {Color}",
        "use the {Color}",
        "use the {Color} color",
        "set the led to {Color}"
      ]
    }
  ]
}